{"ast":null,"code":"var _jsxFileName = \"C:\\\\HTML_CSS\\\\wwr\\\\src\\\\index.js\";\n// import React from \"react\";\n// import * as ReactDOMClient from \"react-dom/client\";\n// import ReactDOM from \"react-dom\";\n// import App from \"./app\";\n// import \"./css/main.css\";\n\n// const app = ReactDOMClient.createRoot(document.getElementById(\"main\"));\n// app.render(<App />);\n\nimport React from \"react\";\nimport ReactDOMClient from \"react-dom/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Adress = _ref => {\n  let {\n    name,\n    adress\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), adress ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: adress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Adress is aveilable\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true);\n};\n_c = Adress;\nclass Prog extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Adress, {\n      name: \"Misha\",\n      adress: \"Ukraina\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n}\nconst link = ReactDOMClient.createRoot(document.getElementById(\"test\"));\nlink.render( /*#__PURE__*/_jsxDEV(Prog, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 29,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"Adress\");","map":{"version":3,"names":["React","ReactDOMClient","jsxDEV","_jsxDEV","Fragment","_Fragment","Adress","_ref","name","adress","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Prog","Component","render","link","createRoot","document","getElementById","$RefreshReg$"],"sources":["C:/HTML_CSS/wwr/src/index.js"],"sourcesContent":["// import React from \"react\";\r\n// import * as ReactDOMClient from \"react-dom/client\";\r\n// import ReactDOM from \"react-dom\";\r\n// import App from \"./app\";\r\n// import \"./css/main.css\";\r\n\r\n// const app = ReactDOMClient.createRoot(document.getElementById(\"main\"));\r\n// app.render(<App />);\r\n\r\nimport React from \"react\";\r\nimport ReactDOMClient from \"react-dom/client\";\r\n\r\nconst Adress = ({ name, adress }) => {\r\n  return (\r\n    <>\r\n      <h1>{name}</h1>\r\n      {adress ? <p>{adress}</p> : <p>Adress is aveilable</p>}\r\n    </>\r\n  );\r\n};\r\n\r\nclass Prog extends React.Component {\r\n  render() {\r\n    return <Adress name={\"Misha\"} adress={\"Ukraina\"} />;\r\n  }\r\n}\r\n\r\nconst link = ReactDOMClient.createRoot(document.getElementById(\"test\"));\r\nlink.render(<Prog />);\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9C,MAAMC,MAAM,GAAGC,IAAA,IAAsB;EAAA,IAArB;IAAEC,IAAI;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAC9B,oBACEJ,OAAA,CAAAE,SAAA;IAAAK,QAAA,gBACEP,OAAA;MAAAO,QAAA,EAAKF;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,EACdL,MAAM,gBAAGN,OAAA;MAAAO,QAAA,EAAID;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,gBAAGX,OAAA;MAAAO,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;EAAA,gBACrD;AAEP,CAAC;AAACC,EAAA,GAPIT,MAAM;AASZ,MAAMU,IAAI,SAAShB,KAAK,CAACiB,SAAS,CAAC;EACjCC,MAAMA,CAAA,EAAG;IACP,oBAAOf,OAAA,CAACG,MAAM;MAACE,IAAI,EAAE,OAAQ;MAACC,MAAM,EAAE;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EACrD;AACF;AAEA,MAAMK,IAAI,GAAGlB,cAAc,CAACmB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACvEH,IAAI,CAACD,MAAM,eAACf,OAAA,CAACa,IAAI;EAAAL,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QAAG,CAAC;AAAC,IAAAC,EAAA;AAAAQ,YAAA,CAAAR,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}